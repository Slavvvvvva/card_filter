{"version":3,"sources":["component/Card/Card.js","component/Card-list/card-list.js","component/SeachField/SearchField.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","Filter","placeholder","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","responce","json","users","this","filterdMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAaeA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAAG,IAA7C,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCQhBC,G,MAZE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACN,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCA/BM,G,MANK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC1B,OACI,uBAAOZ,UAAW,SAASa,KAAO,SAASD,YAAaA,EAAaE,SAAUH,MCqCxEI,E,kDAlCb,aAAe,IAAD,8BACZ,gBAcFJ,OAAS,SAACK,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbpD,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK7C,WAAU,IAAD,EAEyBC,KAAKN,MAA9Bb,EAFA,EAEAA,SAAUU,EAFV,EAEUA,YACXU,EAAkBpB,EAASqB,QAAQ,SAAC1B,GACxC,OAAOA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAGzD,OACE,sBAAKhC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAaW,OAASgB,KAAKhB,OAAQC,YAAY,mBAC/C,cAAC,EAAD,CAAUJ,SAAYoB,W,GA7BZK,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f25e95cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt ='monster' src = {`https://robohash.org/${props.monster.id+100}?set=set2&size=180x180`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from '../Card/Card'\r\nimport './card-list.styles.css'\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map((monster) => {\r\n                    return <Card key={monster.id} monster= {monster} /> \r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nconst SearchField = ({Filter, placeholder }) => {\r\n    return (\r\n        <input className ='search' type = 'search' placeholder={placeholder} onChange={Filter}/>\r\n    )\r\n}\r\n\r\nexport default SearchField","\nimport './App.css';\nimport React from 'react'\nimport CardList from './component/Card-list/card-list'\nimport SearchField from './component/SeachField/SearchField';\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(responce => responce.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  Filter = (e) => this.setState({ searchField: e.target.value})\n\n  render() {\n\n    const {monsters, searchField} = this.state\n    const filterdMonsters = monsters.filter( (monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    })\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Finder</h1>\n        <SearchField Filter ={this.Filter} placeholder='Search monster'/>\n        <CardList monsters = {filterdMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}